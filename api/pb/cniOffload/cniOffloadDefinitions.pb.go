// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: cniOffloadDefinitions.proto

package cniOffload

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IntfDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Vfid   uint32 `protobuf:"varint,2,opt,name=vfid,proto3" json:"vfid,omitempty"`
	Pfid   uint32 `protobuf:"varint,3,opt,name=pfid,proto3" json:"pfid,omitempty"`
	NumPfs uint32 `protobuf:"varint,4,opt,name=num_pfs,json=numPfs,proto3" json:"num_pfs,omitempty"`
}

func (x *IntfDetails) Reset() {
	*x = IntfDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cniOffloadDefinitions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntfDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntfDetails) ProtoMessage() {}

func (x *IntfDetails) ProtoReflect() protoreflect.Message {
	mi := &file_cniOffloadDefinitions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntfDetails.ProtoReflect.Descriptor instead.
func (*IntfDetails) Descriptor() ([]byte, []int) {
	return file_cniOffloadDefinitions_proto_rawDescGZIP(), []int{0}
}

func (x *IntfDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IntfDetails) GetVfid() uint32 {
	if x != nil {
		return x.Vfid
	}
	return 0
}

func (x *IntfDetails) GetPfid() uint32 {
	if x != nil {
		return x.Pfid
	}
	return 0
}

func (x *IntfDetails) GetNumPfs() uint32 {
	if x != nil {
		return x.NumPfs
	}
	return 0
}

// PodDetails of host side Pod for which the add request is generated. These
// details are needed if the DPU is handling offloading of a CNI.
type PodDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodNamespace string `protobuf:"bytes,1,opt,name=pod_namespace,json=podNamespace,proto3" json:"pod_namespace,omitempty"`
	PodName      string `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	ContainerId  string `protobuf:"bytes,3,opt,name=containerId,proto3" json:"containerId,omitempty"`
}

func (x *PodDetails) Reset() {
	*x = PodDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cniOffloadDefinitions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodDetails) ProtoMessage() {}

func (x *PodDetails) ProtoReflect() protoreflect.Message {
	mi := &file_cniOffloadDefinitions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodDetails.ProtoReflect.Descriptor instead.
func (*PodDetails) Descriptor() ([]byte, []int) {
	return file_cniOffloadDefinitions_proto_rawDescGZIP(), []int{1}
}

func (x *PodDetails) GetPodNamespace() string {
	if x != nil {
		return x.PodNamespace
	}
	return ""
}

func (x *PodDetails) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *PodDetails) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

// IpDetails IP address of the interface on the host pod side details. To be used
// on both directions as per configuration.
type IpDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Gateway string `protobuf:"bytes,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Dns     string `protobuf:"bytes,4,opt,name=dns,proto3" json:"dns,omitempty"`
}

func (x *IpDetails) Reset() {
	*x = IpDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cniOffloadDefinitions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpDetails) ProtoMessage() {}

func (x *IpDetails) ProtoReflect() protoreflect.Message {
	mi := &file_cniOffloadDefinitions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpDetails.ProtoReflect.Descriptor instead.
func (*IpDetails) Descriptor() ([]byte, []int) {
	return file_cniOffloadDefinitions_proto_rawDescGZIP(), []int{2}
}

func (x *IpDetails) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *IpDetails) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *IpDetails) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *IpDetails) GetDns() string {
	if x != nil {
		return x.Dns
	}
	return ""
}

// IPAMallocatedbyHost Field to specify if IPAM is on host or on DPU. If on host
// the details of IP allocation will be sent in the IPdetails field from host to
// DPU. If false the IP details will be sent from DPU to host in result
type IPAMallocatedbyHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpamAllocatedbyHost bool `protobuf:"varint,1,opt,name=ipamAllocatedbyHost,proto3" json:"ipamAllocatedbyHost,omitempty"`
}

func (x *IPAMallocatedbyHost) Reset() {
	*x = IPAMallocatedbyHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cniOffloadDefinitions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPAMallocatedbyHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAMallocatedbyHost) ProtoMessage() {}

func (x *IPAMallocatedbyHost) ProtoReflect() protoreflect.Message {
	mi := &file_cniOffloadDefinitions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAMallocatedbyHost.ProtoReflect.Descriptor instead.
func (*IPAMallocatedbyHost) Descriptor() ([]byte, []int) {
	return file_cniOffloadDefinitions_proto_rawDescGZIP(), []int{3}
}

func (x *IPAMallocatedbyHost) GetIpamAllocatedbyHost() bool {
	if x != nil {
		return x.IpamAllocatedbyHost
	}
	return false
}

// OffloadFlags SmartNIC offloads that should be enabled on the mapped interface.
type OffloadFlags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckSumOffload bool `protobuf:"varint,1,opt,name=CheckSumOffload,proto3" json:"CheckSumOffload,omitempty"`
}

func (x *OffloadFlags) Reset() {
	*x = OffloadFlags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cniOffloadDefinitions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OffloadFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffloadFlags) ProtoMessage() {}

func (x *OffloadFlags) ProtoReflect() protoreflect.Message {
	mi := &file_cniOffloadDefinitions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffloadFlags.ProtoReflect.Descriptor instead.
func (*OffloadFlags) Descriptor() ([]byte, []int) {
	return file_cniOffloadDefinitions_proto_rawDescGZIP(), []int{4}
}

func (x *OffloadFlags) GetCheckSumOffload() bool {
	if x != nil {
		return x.CheckSumOffload
	}
	return false
}

var File_cniOffloadDefinitions_proto protoreflect.FileDescriptor

var file_cniOffloadDefinitions_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x6e, 0x69, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a,
	0x0b, 0x49, 0x6e, 0x74, 0x66, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x76, 0x66, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x76, 0x66, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x66, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x70, 0x66, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x5f,
	0x70, 0x66, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x50, 0x66,
	0x73, 0x22, 0x6e, 0x0a, 0x0a, 0x50, 0x6f, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x6b, 0x0a, 0x09, 0x49, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6e, 0x73, 0x22, 0x47,
	0x0a, 0x13, 0x49, 0x50, 0x41, 0x4d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x62,
	0x79, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x69, 0x70, 0x61, 0x6d, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x62, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x13, 0x69, 0x70, 0x61, 0x6d, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x62, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x0c, 0x4f, 0x66, 0x66, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x53, 0x75, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61,
	0x64, 0x42, 0x0f, 0x5a, 0x0d, 0x70, 0x62, 0x2f, 0x63, 0x6e, 0x69, 0x4f, 0x66, 0x66, 0x6c, 0x6f,
	0x61, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cniOffloadDefinitions_proto_rawDescOnce sync.Once
	file_cniOffloadDefinitions_proto_rawDescData = file_cniOffloadDefinitions_proto_rawDesc
)

func file_cniOffloadDefinitions_proto_rawDescGZIP() []byte {
	file_cniOffloadDefinitions_proto_rawDescOnce.Do(func() {
		file_cniOffloadDefinitions_proto_rawDescData = protoimpl.X.CompressGZIP(file_cniOffloadDefinitions_proto_rawDescData)
	})
	return file_cniOffloadDefinitions_proto_rawDescData
}

var file_cniOffloadDefinitions_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_cniOffloadDefinitions_proto_goTypes = []interface{}{
	(*IntfDetails)(nil),         // 0: IntfDetails
	(*PodDetails)(nil),          // 1: PodDetails
	(*IpDetails)(nil),           // 2: IpDetails
	(*IPAMallocatedbyHost)(nil), // 3: IPAMallocatedbyHost
	(*OffloadFlags)(nil),        // 4: OffloadFlags
}
var file_cniOffloadDefinitions_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cniOffloadDefinitions_proto_init() }
func file_cniOffloadDefinitions_proto_init() {
	if File_cniOffloadDefinitions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cniOffloadDefinitions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntfDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cniOffloadDefinitions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cniOffloadDefinitions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cniOffloadDefinitions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPAMallocatedbyHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cniOffloadDefinitions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OffloadFlags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cniOffloadDefinitions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cniOffloadDefinitions_proto_goTypes,
		DependencyIndexes: file_cniOffloadDefinitions_proto_depIdxs,
		MessageInfos:      file_cniOffloadDefinitions_proto_msgTypes,
	}.Build()
	File_cniOffloadDefinitions_proto = out.File
	file_cniOffloadDefinitions_proto_rawDesc = nil
	file_cniOffloadDefinitions_proto_goTypes = nil
	file_cniOffloadDefinitions_proto_depIdxs = nil
}
